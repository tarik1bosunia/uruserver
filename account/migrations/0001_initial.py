# Generated by Django 5.2.2 on 2025-07-13 09:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=255, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Last Name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.', verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff Status')),
                ('is_admin', models.BooleanField(default=False, help_text='Designates whether the user has all permissions without explicitly assigning them.', verbose_name='Admin Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('last_password_change', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Last Password Change')),
                ('auth_provider', models.CharField(choices=[('email', 'Email'), ('google', 'Google'), ('github', 'GitHub'), ('facebook', 'Facebook')], default='email', max_length=50, verbose_name='Authentication Provider')),
                ('is_email_verified', models.BooleanField(default=False, help_text="Designates whether this user's email has been verified.", verbose_name='Email Verified')),
                ('role', models.CharField(choices=[('superadmin', 'Super Admin'), ('businessman', 'Businessman')], default='businessman', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PendingEmailChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_email', models.EmailField(max_length=254)),
                ('token', models.CharField(max_length=64, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pending_email_change', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Pending Email Change',
                'verbose_name_plural': 'Pending Email Changes',
                'indexes': [models.Index(fields=['token'], name='account_pen_token_c47b4b_idx'), models.Index(fields=['expires_at'], name='account_pen_expires_228a47_idx')],
            },
        ),
    ]
